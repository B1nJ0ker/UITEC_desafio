# Requisitos
 * PHP 8.2+
 * Composer 2.5.5+
 * Postgres 13+
 * Node 20.12.0
 * npm 10.5.0+
 * Angular 17.32

# Backend
## Instalação
* ### Banco de dados
Instalar o Postgres 13 ou superior.

Criar o banco de dados no postgres: 
```sql
CREATE DATABASE nome_do_banco
```

* ### PHP
 Após instalar o php 8.2 ou superior. No aquivo ```php.ini``` descomente as seguintes linhas:
```
extension=pdo_pgsql
extension=zip
```

* ### Composer
Baixar e instalar o composer ( Lembre-se de apontar para o path correto do php )

Rode ```composer install``` na pasta ```backend``` do projeto para Instalar todas as dependências 

## Configuração
* ### Configurar a conexão com o banco de dados
Renomeio o arquivo ```.env.example``` para ```.env```

No bloco ```DB_CONNECTION``` insira as informações corretas do seu banco de dados.

```
DB_CONNECTION=pgsql
DB_HOST=127.0.0.1
DB_PORT=5432
DB_DATABASE=NOME_DO_BANCO_DE_DADOS
DB_USERNAME=NOME_DO_USUARIO_DO_BANCO_DE_DADOS
DB_PASSWORD=SENHA_DO_BANCO_DE_DADOS
```
* ### Inicializar o banco com ```artisan```
```
php artisan migrate
```

* ### Iniciar servidor
```
php artisan serve
```

# Frontend
## Instalação
* ### Node
Baixar e instalar o NodeJS (**Ainda não execute o ```npm install```**)

* ### Angular
Na pasta ```frontend/app-uitec``` instale o Angular com o comando ```npm install -g @angular/cli```

### Configuração
* #### Dependências
Ainda na pasta ```frontend/app-uitec``` instale todas as dependências com o comando ```npm install```

* #### Configurar a URL da API
No arquivo ```frontend/app-uitec/src/common/general.config.ts``` edite a URL caso seja necessário:
```bash
public static apiURL: string = "http://URL_DO_BACKEND/";      
```
* ### Iniciar servidor
```
ng serve
```